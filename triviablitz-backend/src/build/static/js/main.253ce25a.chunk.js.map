{"version":3,"sources":["pages/LogIn.js","pages/Timer.js","pages/Question.js","pages/GameOver.js","pages/Scores.js","pages/Body.js","pages/Navigation.js","App.js","index.js"],"names":["LogIn","_useState","useState","_useState2","Object","slicedToArray","user","setUser","_useState3","_useState4","score","_useState5","Date","getTime","_useState6","timeLastPlayed","navigate","useNavigate","react_default","a","createElement","Fragment","onSubmit","e","preventDefault","newUser","alert","fetch","method","body","JSON","stringify","headers","Content-Type","id","type","required","value","onClick","document","getElementById","onChange","target","MyTimer","_ref","expiryTimestamp","playerScore","ref","props","_useTimer","useTimer","onExpire","state","timeRemaing","seconds","pause","minutes","isRunning","start","resume","restart","onTimeOver","useImperativeHandle","console","log","style","textAlign","fontSize","Question","setPlayerScore","difficultyArray","ChildRef","useRef","changeDifficultyState","setChangeDifficultyState","question","setQuestion","_useState7","_useState8","answer","setAnswer","_useState9","_useState10","incorrectAnswers","setIncorrectAnswers","answerArray","shuffledAnswersArray","map","sort","Math","random","b","_ref2","useEffect","url","_ref3","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","json","wrap","_context","prev","next","sent","results","replace","correct_answer","incorrect_answers","t0","stop","apply","this","arguments","fetchData","checkAnswer","usersGuess","concat","timeRemaining","arr","array","randomIndex","currentIndex","length","floor","_ref4","shuffleIndex","toUpperCase","Button","QuestionPage","time","setSeconds","getSeconds","Timer","GameOver","location","useLocation","timeLeft","timeBonus","isNaN","total","Scores","Table","striped","bordered","hover","Body","react_router_dom","react_router","exact","path","element","pages_LogIn","pages_Question","pages_GameOver","pages_Scores","Navigation","Navbar","bg","variant","Container","Brand","href","Nav","className","Link","App","pages_Navigation","pages_Body","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.253ce25a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport function LogIn() {\r\n  const [user, setUser] = useState(\"\");\r\n  const [score, setScore] = useState(0);\r\n  const [timeLastPlayed, setTimeLastPlayed] = useState(new Date().getTime());\r\n\r\n  let navigate = useNavigate();\r\n  const checkName = () => {\r\n    if (document.getElementById(\"name\").value === \"\") {\r\n      alert(\"Please enter a name\");\r\n    } else {\r\n      // setUsername(document.getElementById(\"name\"));\r\n      // alert(user)\r\n      // console.log(username);\r\n      navigate(\"/game\");\r\n    }\r\n  };\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    let newUser = {\r\n      user: user,\r\n      score: score,\r\n      timeLastPlayed: timeLastPlayed\r\n\r\n    }\r\n    alert(user);\r\n\r\n\r\n    fetch('/api/addUser', {\r\n      method: 'POST',\r\n      body: JSON.stringify(newUser),\r\n      headers: {'Content-Type': 'application/json'}\r\n    })\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>TriviaBlitz!</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Player name:</label>\r\n        <input id=\"name\" type=\"text\"></input>\r\n        <button required value={user} onClick={() => checkName()} onChange={(e)=> {setUser(e.target.value)}}>Start Game</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n","import React, { forwardRef, useImperativeHandle }from 'react';\r\nimport { useTimer } from 'react-timer-hook';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction MyTimer({ expiryTimestamp, playerScore, props, ref }) {\r\n  const {\r\n    seconds,\r\n    minutes,\r\n    isRunning,\r\n    start,\r\n    pause,\r\n    resume,\r\n    restart,\r\n    onTimeOver,\r\n  } = useTimer({ expiryTimestamp, onExpire: () => navigate(\"/gameover\", { state: { id: 1, score: playerScore, timeRemaing: 0 } })});\r\n  let navigate = useNavigate();\r\n\r\n  useImperativeHandle(ref, ()=>({\r\n    timeRemaing\r\n  }))\r\n  const timeRemaing = () =>{\r\n    pause()\r\n    console.log(expiryTimestamp - seconds);\r\n    console.log(\"expiryTimestamp - seconds\");\r\n    return expiryTimestamp - seconds\r\n  }\r\n\r\n\r\n  return (\r\n    <div style={{textAlign: 'center'}}>\r\n      <h1>Remaining Time</h1>\r\n      <div style={{fontSize: '75px'}}>\r\n        <span>{seconds}</span>\r\n      </div>\r\n      {/* <p>{isRunning ? 'Running' : 'Not running'}</p> \r\n      <button onClick={start}>Start</button>\r\n      <button onClick={pause}>Pause</button>\r\n      <button onClick={resume}>Resume</button> */}\r\n      {/* <button onClick={() => {\r\n        // Restarts to 5 minutes timer\r\n        const time = new Date();\r\n        time.setSeconds(time.getSeconds() + 30);\r\n        restart(time)\r\n      }}>Restart</button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyTimer;\r\n ","import React from 'react'\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n// import { Button } from 'react-bootstrap';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useTimer } from 'react-timer-hook';\r\nimport MyTimer from './Timer';\r\n\r\nexport function QuestionPage() {\r\n  const time = new Date();\r\n  time.setSeconds(time.getSeconds() + 30); // 30 second timer\r\n  let [playerScore, setPlayerScore] = useState(0);\r\n  return(\r\n    <>\r\n    <MyTimer expiryTimestamp={time} playerScore={playerScore}/>\r\n    <Question setPlayerScore={setPlayerScore} playerScore={playerScore}/>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n \r\n\r\nexport function Question({setPlayerScore, playerScore}) {\r\n  let navigate = useNavigate();\r\n  const difficultyArray = [\"easy\", \"medium\", \"hard\"];\r\n  const ChildRef = useRef();\r\n\r\n  const [changeDifficultyState, setChangeDifficultyState] = useState(0);\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [incorrectAnswers, setIncorrectAnswers] = useState([]);\r\n\r\n  let answerArray = [\r\n    answer,\r\n    incorrectAnswers[0],\r\n    incorrectAnswers[1],\r\n    incorrectAnswers[2],\r\n  ];\r\n  let shuffledAnswersArray = answerArray\r\n    .map((value) => ({ value, sort: Math.random() }))\r\n    .sort((a, b) => a.sort - b.sort)\r\n    .map(({ value }) => value);\r\n\r\n  const textFormatFix = (inputText) => {\r\n    return inputText\r\n      .replace(/&quot;/g, '\"')\r\n      .replace(/&eacute;/g, \"é\")\r\n      .replace(/&rsquo;/g, \"’\")\r\n      .replace(/&#039;/g, \"'\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const url =\r\n      \"https://opentdb.com/api.php?amount=1&type=multiple&difficulty=\" +\r\n      difficultyArray[changeDifficultyState];\r\n    console.log(url);\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(url);\r\n        const json = await response.json();\r\n        setQuestion(textFormatFix(json.results[0].question));\r\n        setAnswer(json.results[0].correct_answer);\r\n        setIncorrectAnswers(json.results[0].incorrect_answers);\r\n\r\n        // shuffledAnswersArray = answerArray\r\n        // .map((value) => ({ value, sort: Math.random() }))\r\n        // .sort((a, b) => a.sort - b.sort)\r\n        // .map(({ value }) => value);\r\n      } catch (error) {\r\n        console.log(\"error\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [changeDifficultyState]);\r\n\r\n  const checkAnswer = (usersGuess) => {\r\n    if (usersGuess === answer) {\r\n      alert(\"CORRECT\");\r\n      //difficultyIndex += 1;\r\n      if (difficultyArray[changeDifficultyState] === \"easy\") {\r\n        setPlayerScore(playerScore += 1);\r\n        console.log(playerScore);\r\n      } else if (difficultyArray[changeDifficultyState] === \"medium\") {\r\n        setPlayerScore(playerScore += 3);\r\n        console.log(playerScore);\r\n      } else if (difficultyArray[changeDifficultyState] === \"hard\") {\r\n        setPlayerScore(playerScore += 5);\r\n        console.log(`difficulty now set to hard`)\r\n        console.log(`score updated for hard ${playerScore}`);\r\n        \r\n        navigate(\"/gameover\", { state: { id: 1, score: playerScore, timeRemaining: ChildRef.timeRemaining}});\r\n      }\r\n\r\n      setChangeDifficultyState(changeDifficultyState + 1);\r\n      console.log(difficultyArray[changeDifficultyState]);\r\n      // answerArray = [answer, incorrectAnswers[0], incorrectAnswers[1], incorrectAnswers[2]];\r\n      // shuffledAnswersArray = answerArray\r\n      // .map(value => ({ value, sort: Math.random() }))\r\n      // .sort((a, b) => a.sort - b.sort)\r\n      // .map(({ value }) => value)\r\n    } else {\r\n      alert(\"Answer Incorrect! Try again tomorrow!\");\r\n      navigate(\"/gameover\", { state: { id: 1, score: playerScore, timeRemaining: ChildRef.timeRemaining} });\r\n    }\r\n    // if (difficultyArray[difficultyIndex] === \"hard\"){\r\n    //   navigate(\"/\");\r\n    // }\r\n  };\r\n\r\n  function shuffleIndex(array) {\r\n    let currentIndex = array.length,\r\n      randomIndex;\r\n\r\n    while (currentIndex !== 0) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex],\r\n        array[currentIndex],\r\n      ];\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  var arr = [0, 1, 2, 3];\r\n  shuffleIndex(arr);\r\n  console.log(arr);\r\n\r\n  return (\r\n    <>\r\n      <h1>\r\n        {question} - {difficultyArray[changeDifficultyState].toUpperCase()}\r\n      </h1>\r\n      <hr></hr>\r\n      <>\r\n        <Button onClick={() => checkAnswer(shuffledAnswersArray[arr[0]])}>\r\n          {shuffledAnswersArray[arr[0]]}\r\n        </Button>\r\n        <Button onClick={() => checkAnswer(shuffledAnswersArray[arr[1]])}>\r\n          {shuffledAnswersArray[arr[1]]}\r\n        </Button>\r\n        <Button onClick={() => checkAnswer(shuffledAnswersArray[arr[2]])}>\r\n          {shuffledAnswersArray[arr[2]]}\r\n        </Button>\r\n        <Button onClick={() => checkAnswer(shuffledAnswersArray[arr[3]])}>\r\n          {shuffledAnswersArray[arr[3]]}\r\n        </Button>\r\n        <h3>Correct: {answerArray[0]}</h3>\r\n      </>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuestionPage;\r\n","import React from 'react'\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport function GameOver(props){\r\n\r\n    const location = useLocation();\r\n    let timeLeft = location.state.timeRemaing;\r\n    let timeBonus = 0;\r\n    console.log(timeLeft);\r\n    if( isNaN(timeLeft)){\r\n        timeLeft = 0;\r\n    } \r\n    let total = location.state.score;\r\n    if(location.state.score == 9){\r\n        total = (timeLeft * location.state.score) + location.state.score;\r\n        timeBonus = (timeLeft * location.state.score);\r\n\r\n    }\r\n    if (isNaN(total)){\r\n        total = 0;\r\n    }\r\n    if (isNaN(timeBonus)){\r\n        timeBonus = 0;\r\n    }\r\n    return(\r\n        <>\r\n        <h1>Game Over!</h1>\r\n        <br></br>\r\n        <h2>Your Score: {location.state.score}/9</h2>\r\n        <h2>Time Bonus: {timeBonus}</h2>\r\n        <h3>Total: {total}</h3>\r\n        <br></br>\r\n        <p>Round 1 - EASY: 1 point </p>\r\n        <p>Round 2 - MEDIUM: 3 points </p>\r\n        <p>Round 3 - HARD: 5 points </p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GameOver;","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nexport function Scores() {\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Score</th>\r\n          <th>Time Last Played</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>Mark</td>\r\n          <td>15</td>\r\n          <td>2022-06-22 14:55:55 NST</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Jacob</td>\r\n          <td>23</td>\r\n          <td>2022-06-21 08:23:44 NST</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Larry</td>\r\n          <td>16</td>\r\n          <td>2022-05-24 21:22:33 NST</td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default Scores;\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\r\nimport LogIn from \"./LogIn\";\r\nimport QuestionPage from \"./Question\";\r\nimport GameOver from './GameOver';\r\nimport MyTimer from './Timer';\r\nimport Scores from './Scores';\r\n\r\nexport function Body() {\r\n  // output HomePage, Question, Leaderboards, GameOver\r\n  // conditional rendering\r\n  \r\n\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<LogIn />} />\r\n          <Route exact path=\"/game\" element={<QuestionPage />} />\r\n          <Route exact path=\"/gameover\" element={<GameOver />}/>\r\n          <Route exact path='/timer' element={<MyTimer />}/>\r\n          <Route exact path='/scores' element={<Scores />}/>\r\n        </Routes>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React from 'react'\r\nimport {Container, Nav} from 'react-bootstrap';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nlet username = \"user\";\r\n\r\nexport function Navigation(){\r\n  // const location = useLocation();\r\n    return (\r\n      \r\n        <Navbar bg=\"primary\" variant=\"dark\">\r\n          <Container>\r\n            <Navbar.Brand href=\"#home\">TriviaBlitz</Navbar.Brand>\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"/\">Login</Nav.Link>\r\n              <Nav.Link href=\"/scores\">Scores</Nav.Link>\r\n            </Nav>\r\n          </Container>\r\n        </Navbar>      \r\n    );\r\n}\r\n\r\nexport default Navigation;","import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport Body from \"./pages/Body\";\r\nimport Navigation from \"./pages/Navigation\";\r\n\r\nfunction App() {\r\n  const time = new Date();\r\n  time.setSeconds(time.getSeconds() + 600); // 10 minutes timer\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <Body />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}